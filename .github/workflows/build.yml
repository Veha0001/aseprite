name: Build Aseprite
on: 
  workflow_dispatch:
    inputs:
      buildtype:
        description: 'BuildType'
        required: true
        default: 'RelWithDebInfo'
        type: choice
        options:
          - None
          - Debug
          - Release
          - RelWithDebInfo
          - Profile
      tags:
        description: 'Tags of version or Branches'
        default: 'v1.3.7'
        required: true
        type: string
      publish-release:
        description: 'Publish the build as a release'
        required: true
        type: boolean
jobs:
  build:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'aseprite/aseprite'
        ref: ${{ inputs.tags }}
        submodules: 'recursive'
    - name: Install Skia
      shell: bash
      run: |
        choco install wget -y --no-progress
        wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
        unzip Skia-Windows-Release-x64.zip -d skia
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        mkdir build
        cmake -S . -B build -G Ninja \
          -DENABLE_CCACHE=OFF \
          -DCMAKE_BUILD_TYPE=${{ inputs.buildtype }} \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=skia \
          -DSKIA_LIBRARY_DIR=skia/out/Release-x64 \
          -DSKIA_LIBRARY=skia/out/Release-x64/skia.lib \
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja aseprite
        tar -cJvf Aseprite-${{ inputs.tags }}.tar.xz -C bin .
    - uses: actions/upload-artifact@v4
      with:
        name: Aseprite
        path: build/bin
    - name: Publish Release
      if: ${{ inputs['publish-release'] }}
      uses: softprops/action-gh-release@v2
      with:
        files: build/Aseprite-${{ inputs.tags }}.tar.xz
        name: Aseprite ${{ inputs.tags }}
        tag_name: "ci-${{ inputs.tags }}"
